import{f as e,r as n,g as t,n as r,h as i,w as o,v as a,o as u,c as l,a as c,i as s,j as m,d as f,k as v,l as d,m as h}from"./chunks/framework.8a628b0e.js";const g={class:"overlay"},T=e({__name:"EnterGoContent",props:{defaultGoToPagePath:{default:"/examples/markdown-examples.html"}},setup(e){const m=e,f=n(!0),v=n(!0),d=e=>{if("Enter"===e.key){const e=window.location.origin+m.defaultGoToPagePath;window.open(e,"_self")}};return t((()=>{r((()=>{setTimeout((()=>{f.value=!1,setTimeout((()=>{v.value=!1}),1e3)}),2e3),window.addEventListener("keydown",d)}))})),i((()=>{setTimeout((()=>{window.removeEventListener("keydown",d)}),2e3)})),(e,n)=>o((u(),l("div",g,[c("p",{class:"enter",style:s({opacity:Number(f.value),transition:"all .2s ease-in-out"})}," Enter ",4)],512)),[[a,v.value]])}}),p={class:"home-page"},E=f('<canvas></canvas><div class="promo"><div class="promo-middle"><div class="promo-content"><div class="promo-header"><span class="promo-close">Ã—</span></div><div class="promo-body"><p>Try Fluid Simulation app!</p><div class="links-container"><a class="link" id="apple_link" target="_blank"></a><a class="link" id="google_link" target="_blank"></a></div></div></div></div></div>',2),x=e({__name:"Home",setup:e=>(t((()=>{r((async()=>{const e=await v((()=>import("./chunks/dat.gui.module.4f5681da.js")),[]);window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)},ga.l=+new Date,ga("create","UA-105392568-1","auto"),ga("send","pageview");const n=document.getElementsByClassName("promo")[0],t=document.getElementsByClassName("promo-close")[0];m()&&setTimeout((()=>{n.style.display="table"}),2e4),t.addEventListener("click",(e=>{n.style.display="none"}));document.getElementById("apple_link").addEventListener("click",(e=>{ga("send","event","link promo","app"),window.open("https://apps.apple.com/us/app/fluid-simulation/id1443124993")}));document.getElementById("google_link").addEventListener("click",(e=>{ga("send","event","link promo","app"),window.open("https://play.google.com/store/apps/details?id=games.paveldogreat.fluidsimfree")}));const r=document.getElementsByTagName("canvas")[0];xe(),window.addEventListener("resize",xe);let i={SIM_RESOLUTION:128,DYE_RESOLUTION:1024,CAPTURE_RESOLUTION:512,DENSITY_DISSIPATION:1,VELOCITY_DISSIPATION:.2,PRESSURE:.8,PRESSURE_ITERATIONS:20,CURL:30,SPLAT_RADIUS:.25,SPLAT_FORCE:6e3,SHADING:!0,COLORFUL:!0,COLOR_UPDATE_SPEED:10,PAUSED:!1,BACK_COLOR:{r:0,g:0,b:0},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7,SUNRAYS:!0,SUNRAYS_RESOLUTION:196,SUNRAYS_WEIGHT:1};function o(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}let a=[],u=[];a.push(new o);const{gl:l,ext:c}=function(e){const n={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1};let t=e.getContext("webgl2",n);const r=!!t;r||(t=e.getContext("webgl",n)||e.getContext("experimental-webgl",n));let i,o;r?(t.getExtension("EXT_color_buffer_float"),o=t.getExtension("OES_texture_float_linear")):(i=t.getExtension("OES_texture_half_float"),o=t.getExtension("OES_texture_half_float_linear"));t.clearColor(0,0,0,1);const a=r?t.HALF_FLOAT:i.HALF_FLOAT_OES;let u,l,c;r?(u=s(t,t.RGBA16F,t.RGBA,a),l=s(t,t.RG16F,t.RG,a),c=s(t,t.R16F,t.RED,a)):(u=s(t,t.RGBA,t.RGBA,a),l=s(t,t.RGBA,t.RGBA,a),c=s(t,t.RGBA,t.RGBA,a));return ga("send","event",r?"webgl2":"webgl",null==u?"not supported":"supported"),{gl:t,ext:{formatRGBA:u,formatRG:l,formatR:c,halfFloatTexType:a,supportLinearFiltering:o}}}(r);function s(e,n,t,r){if(!function(e,n,t,r){let i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,n,4,4,0,t,r,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER);return a==e.FRAMEBUFFER_COMPLETE}(e,n,t,r))switch(n){case e.R16F:return s(e,e.RG16F,e.RG,r);case e.RG16F:return s(e,e.RGBA16F,e.RGBA,r);default:return null}return{internalFormat:n,format:t}}function m(){return/Mobi|Android/i.test(navigator.userAgent)}function f(){let e=we(i.CAPTURE_RESOLUTION),n=de(e.width,e.height,c.formatRGBA.internalFormat,c.formatRGBA.format,c.halfFloatTexType,l.NEAREST);Re(n);let t=function(e){l.bindFramebuffer(l.FRAMEBUFFER,e.fbo);let n=e.width*e.height*4,t=new Float32Array(n);return l.readPixels(0,0,e.width,e.height,l.RGBA,l.FLOAT,t),t}(n);t=function(e,n,t){let r=new Uint8Array(e.length),i=0;for(let o=t-1;o>=0;o--)for(let t=0;t<n;t++){let a=o*n*4+4*t;r[a+0]=255*d(e[i+0]),r[a+1]=255*d(e[i+1]),r[a+2]=255*d(e[i+2]),r[a+3]=255*d(e[i+3]),i+=4}return r}(t,n.width,n.height);let r=function(e,n,t){let r=document.createElement("canvas"),i=r.getContext("2d");r.width=n,r.height=t;let o=i.createImageData(n,t);return o.data.set(e),i.putImageData(o,0,0),r}(t,n.width,n.height),o=r.toDataURL();!function(e,n){let t=document.createElement("a");t.download=e,t.href=n,document.body.appendChild(t),t.click(),document.body.removeChild(t)}("fluid.png",o),URL.revokeObjectURL(o)}function d(e){return Math.min(Math.max(e,0),1)}m()&&(i.DYE_RESOLUTION=512),c.supportLinearFiltering||(i.DYE_RESOLUTION=512,i.SHADING=!1,i.BLOOM=!1,i.SUNRAYS=!1),function(){var n=new e.GUI({width:300});n.add(i,"DYE_RESOLUTION",{high:1024,medium:512,low:256,"very low":128}).name("quality").onFinishChange(ve),n.add(i,"SIM_RESOLUTION",{32:32,64:64,128:128,256:256}).name("sim resolution").onFinishChange(ve),n.add(i,"DENSITY_DISSIPATION",0,4).name("density diffusion"),n.add(i,"VELOCITY_DISSIPATION",0,4).name("velocity diffusion"),n.add(i,"PRESSURE",0,1).name("pressure"),n.add(i,"CURL",0,50).name("vorticity").step(1),n.add(i,"SPLAT_RADIUS",.01,1).name("splat radius"),n.add(i,"SHADING").name("shading").onFinishChange(Te),n.add(i,"COLORFUL").name("colorful"),n.add(i,"PAUSED").name("paused").listen(),n.add({fun:()=>{u.push(parseInt(20*Math.random())+5)}},"fun").name("Random splats");let t=n.addFolder("Bloom");t.add(i,"BLOOM").name("enabled").onFinishChange(Te),t.add(i,"BLOOM_INTENSITY",.1,2).name("intensity"),t.add(i,"BLOOM_THRESHOLD",0,1).name("threshold");let r=n.addFolder("Sunrays");r.add(i,"SUNRAYS").name("enabled").onFinishChange(Te),r.add(i,"SUNRAYS_WEIGHT",.3,1).name("weight");let o=n.addFolder("Capture");o.addColor(i,"BACK_COLOR").name("background color"),o.add(i,"TRANSPARENT").name("transparent"),o.add({fun:f},"fun").name("take screenshot");let a=n.add({fun:()=>{window.open("https://github.com/PavelDoGreat/WebGL-Fluid-Simulation"),ga("send","event","link button","github")}},"fun").name("Github");a.__li.className="cr function bigFont",a.__li.style.borderLeft="3px solid #8C8C8C";let l=document.createElement("span");a.domElement.parentElement.appendChild(l),l.className="icon github";let c=n.add({fun:()=>{ga("send","event","link button","twitter"),window.open("https://twitter.com/PavelDoGreat")}},"fun").name("Twitter");c.__li.className="cr function bigFont",c.__li.style.borderLeft="3px solid #8C8C8C";let s=document.createElement("span");c.domElement.parentElement.appendChild(s),s.className="icon twitter";let v=n.add({fun:()=>{ga("send","event","link button","discord"),window.open("https://discordapp.com/invite/CeqZDDE")}},"fun").name("Discord");v.__li.className="cr function bigFont",v.__li.style.borderLeft="3px solid #8C8C8C";let d=document.createElement("span");v.domElement.parentElement.appendChild(d),d.className="icon discord";let h=n.add({fun:()=>{ga("send","event","link button","app"),window.open("http://onelink.to/5b58bn")}},"fun").name("Check out mobile app");h.__li.className="cr function appBigFont",h.__li.style.borderLeft="3px solid #00FF7F";let g=document.createElement("span");h.domElement.parentElement.appendChild(g),g.className="icon app",m()&&n.close()}();class h{constructor(e,n){this.uniforms={},this.program=g(e,n),this.uniforms=T(this.program)}bind(){l.useProgram(this.program)}}function g(e,n){let t=l.createProgram();return l.attachShader(t,e),l.attachShader(t,n),l.linkProgram(t),l.getProgramParameter(t,l.LINK_STATUS)||console.trace(l.getProgramInfoLog(t)),t}function T(e){let n=[],t=l.getProgramParameter(e,l.ACTIVE_UNIFORMS);for(let r=0;r<t;r++){let t=l.getActiveUniform(e,r).name;n[t]=l.getUniformLocation(e,t)}return n}function p(e,n,t){n=function(e,n){if(null==n)return e;let t="";return n.forEach((e=>{t+="#define "+e+"\n"})),t+e}(n,t);const r=l.createShader(e);return l.shaderSource(r,n),l.compileShader(r),l.getShaderParameter(r,l.COMPILE_STATUS)||console.trace(l.getShaderInfoLog(r)),r}const E=p(l.VERTEX_SHADER,"\n      precision highp float;\n\n      attribute vec2 aPosition;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform vec2 texelSize;\n\n      void main () {\n          vUv = aPosition * 0.5 + 0.5;\n          vL = vUv - vec2(texelSize.x, 0.0);\n          vR = vUv + vec2(texelSize.x, 0.0);\n          vT = vUv + vec2(0.0, texelSize.y);\n          vB = vUv - vec2(0.0, texelSize.y);\n          gl_Position = vec4(aPosition, 0.0, 1.0);\n      }\n  "),x=p(l.VERTEX_SHADER,"\n      precision highp float;\n\n      attribute vec2 aPosition;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      uniform vec2 texelSize;\n\n      void main () {\n          vUv = aPosition * 0.5 + 0.5;\n          float offset = 1.33333333;\n          vL = vUv - texelSize * offset;\n          vR = vUv + texelSize * offset;\n          gl_Position = vec4(aPosition, 0.0, 1.0);\n      }\n  "),R=p(l.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      uniform sampler2D uTexture;\n\n      void main () {\n          vec4 sum = texture2D(uTexture, vUv) * 0.29411764;\n          sum += texture2D(uTexture, vL) * 0.35294117;\n          sum += texture2D(uTexture, vR) * 0.35294117;\n          gl_FragColor = sum;\n      }\n  "),S=p(l.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n\n      varying highp vec2 vUv;\n      uniform sampler2D uTexture;\n\n      void main () {\n          gl_FragColor = texture2D(uTexture, vUv);\n      }\n  "),D=p(l.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n\n      varying highp vec2 vUv;\n      uniform sampler2D uTexture;\n      uniform float value;\n\n      void main () {\n          gl_FragColor = value * texture2D(uTexture, vUv);\n      }\n  "),_=p(l.FRAGMENT_SHADER,"\n      precision mediump float;\n\n      uniform vec4 color;\n\n      void main () {\n          gl_FragColor = color;\n      }\n  "),A=p(l.FRAGMENT_SHADER,"\n      precision highp float;\n      precision highp sampler2D;\n\n      varying vec2 vUv;\n      uniform sampler2D uTexture;\n      uniform float aspectRatio;\n\n      #define SCALE 25.0\n\n      void main () {\n          vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n          float v = mod(uv.x + uv.y, 2.0);\n          v = v * 0.1 + 0.8;\n          gl_FragColor = vec4(vec3(v), 1.0);\n      }\n  "),y=p(l.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n\n      varying vec2 vUv;\n      uniform sampler2D uTexture;\n      uniform vec3 curve;\n      uniform float threshold;\n\n      void main () {\n          vec3 c = texture2D(uTexture, vUv).rgb;\n          float br = max(c.r, max(c.g, c.b));\n          float rq = clamp(br - curve.x, 0.0, curve.y);\n          rq = curve.z * rq * rq;\n          c *= max(rq, br - threshold) / max(br, 0.0001);\n          gl_FragColor = vec4(c, 0.0);\n      }\n  "),L=p(l.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uTexture;\n\n      void main () {\n          vec4 sum = vec4(0.0);\n          sum += texture2D(uTexture, vL);\n          sum += texture2D(uTexture, vR);\n          sum += texture2D(uTexture, vT);\n          sum += texture2D(uTexture, vB);\n          sum *= 0.25;\n          gl_FragColor = sum;\n      }\n  "),w=p(l.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uTexture;\n      uniform float intensity;\n\n      void main () {\n          vec4 sum = vec4(0.0);\n          sum += texture2D(uTexture, vL);\n          sum += texture2D(uTexture, vR);\n          sum += texture2D(uTexture, vT);\n          sum += texture2D(uTexture, vB);\n          sum *= 0.25;\n          gl_FragColor = sum * intensity;\n      }\n  "),U=p(l.FRAGMENT_SHADER,"\n      precision highp float;\n      precision highp sampler2D;\n\n      varying vec2 vUv;\n      uniform sampler2D uTexture;\n\n      void main () {\n          vec4 c = texture2D(uTexture, vUv);\n          float br = max(c.r, max(c.g, c.b));\n          c.a = 1.0 - min(max(br * 20.0, 0.0), 0.8);\n          gl_FragColor = c;\n      }\n  "),F=p(l.FRAGMENT_SHADER,"\n      precision highp float;\n      precision highp sampler2D;\n\n      varying vec2 vUv;\n      uniform sampler2D uTexture;\n      uniform float weight;\n\n      #define ITERATIONS 16\n\n      void main () {\n          float Density = 0.3;\n          float Decay = 0.95;\n          float Exposure = 0.7;\n\n          vec2 coord = vUv;\n          vec2 dir = vUv - 0.5;\n\n          dir *= 1.0 / float(ITERATIONS) * Density;\n          float illuminationDecay = 1.0;\n\n          float color = texture2D(uTexture, vUv).a;\n\n          for (int i = 0; i < ITERATIONS; i++)\n          {\n              coord -= dir;\n              float col = texture2D(uTexture, coord).a;\n              color += col * illuminationDecay * weight;\n              illuminationDecay *= Decay;\n          }\n\n          gl_FragColor = vec4(color * Exposure, 0.0, 0.0, 1.0);\n      }\n  "),b=p(l.FRAGMENT_SHADER,"\n      precision highp float;\n      precision highp sampler2D;\n\n      varying vec2 vUv;\n      uniform sampler2D uTarget;\n      uniform float aspectRatio;\n      uniform vec3 color;\n      uniform vec2 point;\n      uniform float radius;\n\n      void main () {\n          vec2 p = vUv - point.xy;\n          p.x *= aspectRatio;\n          vec3 splat = exp(-dot(p, p) / radius) * color;\n          vec3 base = texture2D(uTarget, vUv).xyz;\n          gl_FragColor = vec4(base + splat, 1.0);\n      }\n  "),O=p(l.FRAGMENT_SHADER,"\n      precision highp float;\n      precision highp sampler2D;\n\n      varying vec2 vUv;\n      uniform sampler2D uVelocity;\n      uniform sampler2D uSource;\n      uniform vec2 texelSize;\n      uniform vec2 dyeTexelSize;\n      uniform float dt;\n      uniform float dissipation;\n\n      vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n          vec2 st = uv / tsize - 0.5;\n\n          vec2 iuv = floor(st);\n          vec2 fuv = fract(st);\n\n          vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n          vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n          vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n          vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n          return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n      }\n\n      void main () {\n      #ifdef MANUAL_FILTERING\n          vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n          vec4 result = bilerp(uSource, coord, dyeTexelSize);\n      #else\n          vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n          vec4 result = texture2D(uSource, coord);\n      #endif\n          float decay = 1.0 + dissipation * dt;\n          gl_FragColor = result / decay;\n      }",c.supportLinearFiltering?null:["MANUAL_FILTERING"]),N=p(l.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uVelocity;\n\n      void main () {\n          float L = texture2D(uVelocity, vL).x;\n          float R = texture2D(uVelocity, vR).x;\n          float T = texture2D(uVelocity, vT).y;\n          float B = texture2D(uVelocity, vB).y;\n\n          vec2 C = texture2D(uVelocity, vUv).xy;\n          if (vL.x < 0.0) { L = -C.x; }\n          if (vR.x > 1.0) { R = -C.x; }\n          if (vT.y > 1.0) { T = -C.y; }\n          if (vB.y < 0.0) { B = -C.y; }\n\n          float div = 0.5 * (R - L + T - B);\n          gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n      }\n  "),B=p(l.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uVelocity;\n\n      void main () {\n          float L = texture2D(uVelocity, vL).y;\n          float R = texture2D(uVelocity, vR).y;\n          float T = texture2D(uVelocity, vT).x;\n          float B = texture2D(uVelocity, vB).x;\n          float vorticity = R - L - T + B;\n          gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n      }\n  "),I=p(l.FRAGMENT_SHADER,"\n      precision highp float;\n      precision highp sampler2D;\n\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uVelocity;\n      uniform sampler2D uCurl;\n      uniform float curl;\n      uniform float dt;\n\n      void main () {\n          float L = texture2D(uCurl, vL).x;\n          float R = texture2D(uCurl, vR).x;\n          float T = texture2D(uCurl, vT).x;\n          float B = texture2D(uCurl, vB).x;\n          float C = texture2D(uCurl, vUv).x;\n\n          vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n          force /= length(force) + 0.0001;\n          force *= curl * C;\n          force.y *= -1.0;\n\n          vec2 velocity = texture2D(uVelocity, vUv).xy;\n          velocity += force * dt;\n          velocity = min(max(velocity, -1000.0), 1000.0);\n          gl_FragColor = vec4(velocity, 0.0, 1.0);\n      }\n  "),C=p(l.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uPressure;\n      uniform sampler2D uDivergence;\n\n      void main () {\n          float L = texture2D(uPressure, vL).x;\n          float R = texture2D(uPressure, vR).x;\n          float T = texture2D(uPressure, vT).x;\n          float B = texture2D(uPressure, vB).x;\n          float C = texture2D(uPressure, vUv).x;\n          float divergence = texture2D(uDivergence, vUv).x;\n          float pressure = (L + R + B + T - divergence) * 0.25;\n          gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n      }\n  "),P=p(l.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uPressure;\n      uniform sampler2D uVelocity;\n\n      void main () {\n          float L = texture2D(uPressure, vL).x;\n          float R = texture2D(uPressure, vR).x;\n          float T = texture2D(uPressure, vT).x;\n          float B = texture2D(uPressure, vB).x;\n          vec2 velocity = texture2D(uVelocity, vUv).xy;\n          velocity.xy -= vec2(R - L, T - B);\n          gl_FragColor = vec4(velocity, 0.0, 1.0);\n      }\n  "),M=(l.bindBuffer(l.ARRAY_BUFFER,l.createBuffer()),l.bufferData(l.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),l.STATIC_DRAW),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,l.createBuffer()),l.bufferData(l.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),l.STATIC_DRAW),l.vertexAttribPointer(0,2,l.FLOAT,!1,0,0),l.enableVertexAttribArray(0),(e,n=!1)=>{null==e?(l.viewport(0,0,l.drawingBufferWidth,l.drawingBufferHeight),l.bindFramebuffer(l.FRAMEBUFFER,null)):(l.viewport(0,0,e.width,e.height),l.bindFramebuffer(l.FRAMEBUFFER,e.fbo)),n&&(l.clearColor(0,0,0,1),l.clear(l.COLOR_BUFFER_BIT)),l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0)});let G,X,z,Y,H,k,V,W,q=[],K=function(e){let n=l.createTexture();l.bindTexture(l.TEXTURE_2D,n),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.LINEAR),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.LINEAR),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.REPEAT),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.REPEAT),l.texImage2D(l.TEXTURE_2D,0,l.RGB,1,1,0,l.RGB,l.UNSIGNED_BYTE,new Uint8Array([255,255,255]));let t={texture:n,width:1,height:1,attach:e=>(l.activeTexture(l.TEXTURE0+e),l.bindTexture(l.TEXTURE_2D,n),e)},r=new Image;return r.onload=()=>{t.width=r.width,t.height=r.height,l.bindTexture(l.TEXTURE_2D,n),l.texImage2D(l.TEXTURE_2D,0,l.RGB,l.RGB,l.UNSIGNED_BYTE,r)},r.src=e,t}("");const j=new h(x,R),J=new h(E,S),Z=new h(E,D),Q=new h(E,_),$=new h(E,A),ee=new h(E,y),ne=new h(E,L),te=new h(E,w),re=new h(E,U),ie=new h(E,F),oe=new h(E,b),ae=new h(E,O),ue=new h(E,N),le=new h(E,B),ce=new h(E,I),se=new h(E,C),me=new h(E,P),fe=new class{constructor(e,n){this.vertexShader=e,this.fragmentShaderSource=n,this.programs=[],this.activeProgram=null,this.uniforms=[]}setKeywords(e){let n=0;for(let r=0;r<e.length;r++)n+=Fe(e[r]);let t=this.programs[n];if(null==t){let r=p(l.FRAGMENT_SHADER,this.fragmentShaderSource,e);t=g(this.vertexShader,r),this.programs[n]=t}t!=this.activeProgram&&(this.uniforms=T(t),this.activeProgram=t)}bind(){l.useProgram(this.activeProgram)}}(E,"\n      precision highp float;\n      precision highp sampler2D;\n\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uTexture;\n      uniform sampler2D uBloom;\n      uniform sampler2D uSunrays;\n      uniform sampler2D uDithering;\n      uniform vec2 ditherScale;\n      uniform vec2 texelSize;\n\n      vec3 linearToGamma (vec3 color) {\n          color = max(color, vec3(0));\n          return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n      }\n\n      void main () {\n          vec3 c = texture2D(uTexture, vUv).rgb;\n\n      #ifdef SHADING\n          vec3 lc = texture2D(uTexture, vL).rgb;\n          vec3 rc = texture2D(uTexture, vR).rgb;\n          vec3 tc = texture2D(uTexture, vT).rgb;\n          vec3 bc = texture2D(uTexture, vB).rgb;\n\n          float dx = length(rc) - length(lc);\n          float dy = length(tc) - length(bc);\n\n          vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n          vec3 l = vec3(0.0, 0.0, 1.0);\n\n          float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n          c *= diffuse;\n      #endif\n\n      #ifdef BLOOM\n          vec3 bloom = texture2D(uBloom, vUv).rgb;\n      #endif\n\n      #ifdef SUNRAYS\n          float sunrays = texture2D(uSunrays, vUv).r;\n          c *= sunrays;\n      #ifdef BLOOM\n          bloom *= sunrays;\n      #endif\n      #endif\n\n      #ifdef BLOOM\n          float noise = texture2D(uDithering, vUv * ditherScale).r;\n          noise = noise * 2.0 - 1.0;\n          bloom += noise / 255.0;\n          bloom = linearToGamma(bloom);\n          c += bloom;\n      #endif\n\n          float a = max(c.r, max(c.g, c.b));\n          gl_FragColor = vec4(c, a);\n      }\n  ");function ve(){let e=we(i.SIM_RESOLUTION),n=we(i.DYE_RESOLUTION);const t=c.halfFloatTexType,r=c.formatRGBA,o=c.formatRG,a=c.formatR,u=c.supportLinearFiltering?l.LINEAR:l.NEAREST;l.disable(l.BLEND),G=null==G?he(n.width,n.height,r.internalFormat,r.format,t,u):ge(G,n.width,n.height,r.internalFormat,r.format,t,u),X=null==X?he(e.width,e.height,o.internalFormat,o.format,t,u):ge(X,e.width,e.height,o.internalFormat,o.format,t,u),z=de(e.width,e.height,a.internalFormat,a.format,t,l.NEAREST),Y=de(e.width,e.height,a.internalFormat,a.format,t,l.NEAREST),H=he(e.width,e.height,a.internalFormat,a.format,t,l.NEAREST),function(){let e=we(i.BLOOM_RESOLUTION);const n=c.halfFloatTexType,t=c.formatRGBA,r=c.supportLinearFiltering?l.LINEAR:l.NEAREST;k=de(e.width,e.height,t.internalFormat,t.format,n,r),q.length=0;for(let o=0;o<i.BLOOM_ITERATIONS;o++){let i=e.width>>o+1,a=e.height>>o+1;if(i<2||a<2)break;let u=de(i,a,t.internalFormat,t.format,n,r);q.push(u)}}(),function(){let e=we(i.SUNRAYS_RESOLUTION);const n=c.halfFloatTexType,t=c.formatR,r=c.supportLinearFiltering?l.LINEAR:l.NEAREST;V=de(e.width,e.height,t.internalFormat,t.format,n,r),W=de(e.width,e.height,t.internalFormat,t.format,n,r)}()}function de(e,n,t,r,i,o){l.activeTexture(l.TEXTURE0);let a=l.createTexture();l.bindTexture(l.TEXTURE_2D,a),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,o),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,o),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texImage2D(l.TEXTURE_2D,0,t,e,n,0,r,i,null);let u=l.createFramebuffer();return l.bindFramebuffer(l.FRAMEBUFFER,u),l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,l.TEXTURE_2D,a,0),l.viewport(0,0,e,n),l.clear(l.COLOR_BUFFER_BIT),{texture:a,fbo:u,width:e,height:n,texelSizeX:1/e,texelSizeY:1/n,attach:e=>(l.activeTexture(l.TEXTURE0+e),l.bindTexture(l.TEXTURE_2D,a),e)}}function he(e,n,t,r,i,o){let a=de(e,n,t,r,i,o),u=de(e,n,t,r,i,o);return{width:e,height:n,texelSizeX:a.texelSizeX,texelSizeY:a.texelSizeY,get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap(){let e=a;a=u,u=e}}}function ge(e,n,t,r,i,o,a){return e.width==n&&e.height==t||(e.read=function(e,n,t,r,i,o,a){let u=de(n,t,r,i,o,a);return J.bind(),l.uniform1i(J.uniforms.uTexture,e.attach(0)),M(u),u}(e.read,n,t,r,i,o,a),e.write=de(n,t,r,i,o,a),e.width=n,e.height=t,e.texelSizeX=1/n,e.texelSizeY=1/t),e}function Te(){let e=[];i.SHADING&&e.push("SHADING"),i.BLOOM&&e.push("BLOOM"),i.SUNRAYS&&e.push("SUNRAYS"),fe.setKeywords(e)}Te(),ve(),Se(parseInt(20*Math.random())+5);let pe=Date.now(),Ee=0;function xe(){let e=Ue(r.clientWidth),n=Ue(r.clientHeight);return(r.width!=e||r.height!=n)&&(r.width=e,r.height=n,!0)}function Re(e){var n,t,o,a;i.BLOOM&&function(e,n){if(q.length<2)return;let t=n;l.disable(l.BLEND),ee.bind();let r=i.BLOOM_THRESHOLD*i.BLOOM_SOFT_KNEE+1e-4,o=i.BLOOM_THRESHOLD-r,a=2*r,u=.25/r;l.uniform3f(ee.uniforms.curve,o,a,u),l.uniform1f(ee.uniforms.threshold,i.BLOOM_THRESHOLD),l.uniform1i(ee.uniforms.uTexture,e.attach(0)),M(t),ne.bind();for(let i=0;i<q.length;i++){let e=q[i];l.uniform2f(ne.uniforms.texelSize,t.texelSizeX,t.texelSizeY),l.uniform1i(ne.uniforms.uTexture,t.attach(0)),M(e),t=e}l.blendFunc(l.ONE,l.ONE),l.enable(l.BLEND);for(let i=q.length-2;i>=0;i--){let e=q[i];l.uniform2f(ne.uniforms.texelSize,t.texelSizeX,t.texelSizeY),l.uniform1i(ne.uniforms.uTexture,t.attach(0)),l.viewport(0,0,e.width,e.height),M(e),t=e}l.disable(l.BLEND),te.bind(),l.uniform2f(te.uniforms.texelSize,t.texelSizeX,t.texelSizeY),l.uniform1i(te.uniforms.uTexture,t.attach(0)),l.uniform1f(te.uniforms.intensity,i.BLOOM_INTENSITY),M(n)}(G.read,k),i.SUNRAYS&&(n=G.read,t=G.write,o=V,l.disable(l.BLEND),re.bind(),l.uniform1i(re.uniforms.uTexture,n.attach(0)),M(t),ie.bind(),l.uniform1f(ie.uniforms.weight,i.SUNRAYS_WEIGHT),l.uniform1i(ie.uniforms.uTexture,t.attach(0)),M(o),function(e,n,t){j.bind();for(let r=0;r<t;r++)l.uniform2f(j.uniforms.texelSize,e.texelSizeX,0),l.uniform1i(j.uniforms.uTexture,e.attach(0)),M(n),l.uniform2f(j.uniforms.texelSize,0,e.texelSizeY),l.uniform1i(j.uniforms.uTexture,n.attach(0)),M(e)}(V,W,1)),null!=e&&i.TRANSPARENT?l.disable(l.BLEND):(l.blendFunc(l.ONE,l.ONE_MINUS_SRC_ALPHA),l.enable(l.BLEND)),i.TRANSPARENT||function(e,n){Q.bind(),l.uniform4f(Q.uniforms.color,n.r,n.g,n.b,1),M(e)}(e,{r:(a=i.BACK_COLOR).r/255,g:a.g/255,b:a.b/255}),null==e&&i.TRANSPARENT&&function(e){$.bind(),l.uniform1f($.uniforms.aspectRatio,r.width/r.height),M(e)}(e),function(e){let n=null==e?l.drawingBufferWidth:e.width,t=null==e?l.drawingBufferHeight:e.height;fe.bind(),i.SHADING&&l.uniform2f(fe.uniforms.texelSize,1/n,1/t);if(l.uniform1i(fe.uniforms.uTexture,G.read.attach(0)),i.BLOOM){l.uniform1i(fe.uniforms.uBloom,k.attach(1)),l.uniform1i(fe.uniforms.uDithering,K.attach(2));let e=function(e,n,t){return{x:n/e.width,y:t/e.height}}(K,n,t);l.uniform2f(fe.uniforms.ditherScale,e.x,e.y)}i.SUNRAYS&&l.uniform1i(fe.uniforms.uSunrays,V.attach(3));M(e)}(e)}function Se(e){for(let n=0;n<e;n++){const e=Le();e.r*=10,e.g*=10,e.b*=10;De(Math.random(),Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),e)}}function De(e,n,t,o,a){oe.bind(),l.uniform1i(oe.uniforms.uTarget,X.read.attach(0)),l.uniform1f(oe.uniforms.aspectRatio,r.width/r.height),l.uniform2f(oe.uniforms.point,e,n),l.uniform3f(oe.uniforms.color,t,o,0),l.uniform1f(oe.uniforms.radius,function(e){let n=r.width/r.height;n>1&&(e*=n);return e}(i.SPLAT_RADIUS/100)),M(X.write),X.swap(),l.uniform1i(oe.uniforms.uTarget,G.read.attach(0)),l.uniform3f(oe.uniforms.color,a.r,a.g,a.b),M(G.write),G.swap()}function _e(e,n,t,i){e.id=n,e.down=!0,e.moved=!1,e.texcoordX=t/r.width,e.texcoordY=1-i/r.height,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.deltaX=0,e.deltaY=0,e.color=Le()}function Ae(e,n,t){e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.texcoordX=n/r.width,e.texcoordY=1-t/r.height,e.deltaX=function(e){let n=r.width/r.height;n<1&&(e*=n);return e}(e.texcoordX-e.prevTexcoordX),e.deltaY=function(e){let n=r.width/r.height;n>1&&(e/=n);return e}(e.texcoordY-e.prevTexcoordY),e.moved=Math.abs(e.deltaX)>0||Math.abs(e.deltaY)>0}function ye(e){e.down=!1}function Le(){let e=function(e,n,t){let r,i,o,a,u,l,c,s;switch(a=Math.floor(6*e),u=6*e-a,l=t*(1-n),c=t*(1-u*n),s=t*(1-(1-u)*n),a%6){case 0:r=t,i=s,o=l;break;case 1:r=c,i=t,o=l;break;case 2:r=l,i=t,o=s;break;case 3:r=l,i=c,o=t;break;case 4:r=s,i=l,o=t;break;case 5:r=t,i=l,o=c}return{r:r,g:i,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function we(e){let n=l.drawingBufferWidth/l.drawingBufferHeight;n<1&&(n=1/n);let t=Math.round(e),r=Math.round(e*n);return l.drawingBufferWidth>l.drawingBufferHeight?{width:r,height:t}:{width:t,height:r}}function Ue(e){let n=window.devicePixelRatio||1;return Math.floor(e*n)}function Fe(e){if(0==e.length)return 0;let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return n}!function e(){const n=function(){let e=Date.now(),n=(e-pe)/1e3;return n=Math.min(n,.016666),pe=e,n}();xe()&&ve();(function(e){if(!i.COLORFUL)return;Ee+=e*i.COLOR_UPDATE_SPEED,Ee>=1&&(Ee=function(e,n,t){let r=t-n;return 0==r?n:(e-n)%r+n}(Ee,0,1),a.forEach((e=>{e.color=Le()})))})(n),function(){u.length>0&&Se(u.pop());a.forEach((e=>{e.moved&&(e.moved=!1,function(e){let n=e.deltaX*i.SPLAT_FORCE,t=e.deltaY*i.SPLAT_FORCE;De(e.texcoordX,e.texcoordY,n,t,e.color)}(e))}))}(),i.PAUSED||function(e){l.disable(l.BLEND),le.bind(),l.uniform2f(le.uniforms.texelSize,X.texelSizeX,X.texelSizeY),l.uniform1i(le.uniforms.uVelocity,X.read.attach(0)),M(Y),ce.bind(),l.uniform2f(ce.uniforms.texelSize,X.texelSizeX,X.texelSizeY),l.uniform1i(ce.uniforms.uVelocity,X.read.attach(0)),l.uniform1i(ce.uniforms.uCurl,Y.attach(1)),l.uniform1f(ce.uniforms.curl,i.CURL),l.uniform1f(ce.uniforms.dt,e),M(X.write),X.swap(),ue.bind(),l.uniform2f(ue.uniforms.texelSize,X.texelSizeX,X.texelSizeY),l.uniform1i(ue.uniforms.uVelocity,X.read.attach(0)),M(z),Z.bind(),l.uniform1i(Z.uniforms.uTexture,H.read.attach(0)),l.uniform1f(Z.uniforms.value,i.PRESSURE),M(H.write),H.swap(),se.bind(),l.uniform2f(se.uniforms.texelSize,X.texelSizeX,X.texelSizeY),l.uniform1i(se.uniforms.uDivergence,z.attach(0));for(let t=0;t<i.PRESSURE_ITERATIONS;t++)l.uniform1i(se.uniforms.uPressure,H.read.attach(1)),M(H.write),H.swap();me.bind(),l.uniform2f(me.uniforms.texelSize,X.texelSizeX,X.texelSizeY),l.uniform1i(me.uniforms.uPressure,H.read.attach(0)),l.uniform1i(me.uniforms.uVelocity,X.read.attach(1)),M(X.write),X.swap(),ae.bind(),l.uniform2f(ae.uniforms.texelSize,X.texelSizeX,X.texelSizeY),c.supportLinearFiltering||l.uniform2f(ae.uniforms.dyeTexelSize,X.texelSizeX,X.texelSizeY);let n=X.read.attach(0);l.uniform1i(ae.uniforms.uVelocity,n),l.uniform1i(ae.uniforms.uSource,n),l.uniform1f(ae.uniforms.dt,e),l.uniform1f(ae.uniforms.dissipation,i.VELOCITY_DISSIPATION),M(X.write),X.swap(),c.supportLinearFiltering||l.uniform2f(ae.uniforms.dyeTexelSize,G.texelSizeX,G.texelSizeY);l.uniform1i(ae.uniforms.uVelocity,X.read.attach(0)),l.uniform1i(ae.uniforms.uSource,G.read.attach(1)),l.uniform1f(ae.uniforms.dissipation,i.DENSITY_DISSIPATION),M(G.write),G.swap()}(n);Re(null),requestAnimationFrame(e)}(),r.addEventListener("mouseover",(e=>{let n=Ue(e.offsetX),t=Ue(e.offsetY),r=a.find((e=>-1==e.id));null==r&&(r=new o),_e(r,-1,n,t)})),r.addEventListener("mousemove",(e=>{let n=a[0];n.down&&Ae(n,Ue(e.offsetX),Ue(e.offsetY))})),window.addEventListener("mouseout",(()=>{ye(a[0])})),r.addEventListener("touchstart",(e=>{e.preventDefault();const n=e.targetTouches;for(;n.length>=a.length;)a.push(new o);for(let t=0;t<n.length;t++){let e=Ue(n[t].pageX),r=Ue(n[t].pageY);_e(a[t+1],n[t].identifier,e,r)}})),r.addEventListener("touchmove",(e=>{e.preventDefault();const n=e.targetTouches;for(let t=0;t<n.length;t++){let e=a[t+1];e.down&&Ae(e,Ue(n[t].pageX),Ue(n[t].pageY))}}),!1),window.addEventListener("touchend",(e=>{const n=e.changedTouches;for(let t=0;t<n.length;t++){let e=a.find((e=>e.id==n[t].identifier));null!=e&&ye(e)}})),window.addEventListener("keydown",(e=>{"KeyP"===e.code&&(i.PAUSED=!i.PAUSED)," "===e.key&&u.push(parseInt(20*Math.random())+5)}))}))})),(e,n)=>(u(),l("div",p,[E,m(T)])))}),R=JSON.parse('{"title":"Home","description":"","frontmatter":{"page":true,"title":"Home"},"headers":[],"relativePath":"index.md"}'),S=Object.assign({name:"index.md"},{setup:e=>(e,n)=>{const t=d("ClientOnly");return u(),l("div",null,[m(t,null,{default:h((()=>[m(x)])),_:1})])}});export{R as __pageData,S as default};
